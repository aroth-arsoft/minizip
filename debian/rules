#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_HOST_ARCH       ?= $(shell dpkg-architecture -qDEB_HOST_ARCH)
DEB_HOST_ARCH_OS    ?= $(shell dpkg-architecture -qDEB_HOST_GNU_OS)
DEB_HOST_MULTIARCH  ?= $(shell dpkg-architecture -qDEB_HOST_MULTIARCH)

CFLAGS = `dpkg-buildflags --get CFLAGS` `dpkg-buildflags --get CPPFLAGS` -Wall -D_REENTRANT
LDFLAGS = `dpkg-buildflags --get LDFLAGS`

# binutils doesn't supply the prefixed version normally like GCC does so
# we can't just unconditionally use DEB_HOST_GNU_TYPE-ar
ifeq ($(DEB_HOST_GNU_TYPE),$(DEB_BUILD_GNU_TYPE))
	AR=ar
else
	AR=$(DEB_HOST_GNU_TYPE)-ar
endif

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O3
endif

UNALIGNED_ARCHS=i386 amd64 kfreebsd-i386 kfreebsd-amd64 hurd-i386 lpia
ifneq (,$(findstring $(DEB_HOST_ARCH), $(UNALIGNED_ARCHS)))
CFLAGS+=-DUNALIGNED_OK
endif

configure-stamp: configure
	dh_testdir
	touch $@

build: build-stamp
build-stamp: configure-stamp
	dh_testdir

	$(MAKE) CC=$(DEB_HOST_GNU_TYPE)-gcc CFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS)" -C contrib/minizip

	touch $@

clean:
	dh_testdir
	dh_testroot

	$(MAKE) -C contrib/minizip clean

	rm -f build-stamp configure-stamp

	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs

	$(MAKE) -C contrib/minizip PREFIX=$(CURDIR)/debian/tmp/usr install

	install -d debian/libminizip1/usr/lib/$(DEB_HOST_MULTIARCH)
	install -d debian/libminizip-dev/usr/lib/$(DEB_HOST_MULTIARCH)
	install -d debian/libminizip-dev/usr/include
	mv debian/tmp/usr/lib/libminizip.so.* debian/libminizip1/usr/lib/$(DEB_HOST_MULTIARCH)
	mv debian/tmp/usr/lib/libminizip.so debian/libminizip-dev/usr/lib/$(DEB_HOST_MULTIARCH)
	mv debian/tmp/usr/lib/libminizip.a debian/libminizip-dev/usr/lib/$(DEB_HOST_MULTIARCH)
	mv debian/tmp/usr/include/* debian/libminizip-dev/usr/include

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs -s ChangeLog
	dh_installdocs -s
	dh_installexamples -s
	dh_install -s --sourcedir=debian/tmp
	dh_installman -s
	dh_lintian -s
	dh_link -s
	dh_strip -s --dbg-package=libminizip1-dbg
	dh_compress -s
	dh_fixperms -s
	dh_makeshlibs -plibminizip1
	dh_installdeb -s
	dh_shlibdeps -s
	dh_gencontrol -s
	dh_md5sums -s
	dh_builddeb -s

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install
